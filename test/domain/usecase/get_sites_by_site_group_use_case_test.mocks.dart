// Mocks generated by Mockito 5.4.4 from annotations
// in gn_mobile_monitoring/test/domain/usecase/get_sites_by_site_group_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:gn_mobile_monitoring/domain/model/base_site.dart' as _i6;
import 'package:gn_mobile_monitoring/domain/model/site_group.dart' as _i5;
import 'package:gn_mobile_monitoring/domain/model/sync_result.dart' as _i2;
import 'package:gn_mobile_monitoring/domain/repository/sites_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSyncResult_0 extends _i1.SmartFake implements _i2.SyncResult {
  _FakeSyncResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SitesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSitesRepository extends _i1.Mock implements _i3.SitesRepository {
  MockSitesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> fetchSiteGroupsAndSitesGroupModules(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSiteGroupsAndSitesGroupModules,
          [token],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.SyncResult> incrementalSyncSitesWithConflictHandling(
          String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #incrementalSyncSitesWithConflictHandling,
          [token],
        ),
        returnValue: _i4.Future<_i2.SyncResult>.value(_FakeSyncResult_0(
          this,
          Invocation.method(
            #incrementalSyncSitesWithConflictHandling,
            [token],
          ),
        )),
      ) as _i4.Future<_i2.SyncResult>);

  @override
  _i4.Future<void> incrementalSyncSiteGroupsAndSitesGroupModules(
          String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #incrementalSyncSiteGroupsAndSitesGroupModules,
          [token],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.SyncResult> incrementalSyncSiteGroupsWithConflictHandling(
          String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #incrementalSyncSiteGroupsWithConflictHandling,
          [token],
        ),
        returnValue: _i4.Future<_i2.SyncResult>.value(_FakeSyncResult_0(
          this,
          Invocation.method(
            #incrementalSyncSiteGroupsWithConflictHandling,
            [token],
          ),
        )),
      ) as _i4.Future<_i2.SyncResult>);

  @override
  _i4.Future<List<_i5.SiteGroup>> getSiteGroups() => (super.noSuchMethod(
        Invocation.method(
          #getSiteGroups,
          [],
        ),
        returnValue: _i4.Future<List<_i5.SiteGroup>>.value(<_i5.SiteGroup>[]),
      ) as _i4.Future<List<_i5.SiteGroup>>);

  @override
  _i4.Future<List<_i6.BaseSite>> getSitesBySiteGroup(int? siteGroupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSitesBySiteGroup,
          [siteGroupId],
        ),
        returnValue: _i4.Future<List<_i6.BaseSite>>.value(<_i6.BaseSite>[]),
      ) as _i4.Future<List<_i6.BaseSite>>);

  @override
  _i4.Future<void> fetchSitesForModule(
    String? moduleCode,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSitesForModule,
          [
            moduleCode,
            token,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> fetchSiteGroupsForModule(
    String? moduleCode,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSiteGroupsForModule,
          [
            moduleCode,
            token,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
